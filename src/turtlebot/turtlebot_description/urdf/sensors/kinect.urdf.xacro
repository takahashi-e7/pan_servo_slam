<?xml version="1.0"?>
<robot name="sensor_kinect" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find turtlebot_description)/urdf/turtlebot_gazebo.urdf.xacro"/>
  <xacro:include filename="$(find turtlebot_description)/urdf/turtlebot_properties.urdf.xacro"/>
  
  <xacro:property name="kinect_cam_py" value="-0.0125"/>
  <!-- Parameterised in part by the values in turtlebot_properties.urdf.xacro -->
  <xacro:macro name="sensor_kinect" params="parent">
  
<!--    <joint name="camera_rgb_joint" type="fixed">-->
    <joint name="camera_rgb_joint" type="revolute">
      <axis xyz="0 0 1"/>
<!--      <limit effort="1000.0" lower="0" upper="0" velocity="10"/>-->
      <limit effort="1000.0" lower="-0.521567881107" upper="0.521567881107" velocity="10"/>
<!--      <limit effort="1000.0" lower="-1.57" upper="1.57" velocity="10"/>-->
      <origin xyz="0.07 0.0 0.11" rpy="${cam_or} ${cam_op} ${cam_oy}"/>
<!-- 0614     <origin xyz="0.07 ${kinect_cam_py} ${cam_pz}" rpy="${cam_or} ${cam_op} ${cam_oy}"/>-->
<!--      <origin xyz="${cam_px} ${kinect_cam_py} ${cam_pz}" rpy="${cam_or} ${cam_op} ${cam_oy}"/>-->
      <parent link="${parent}"/>
      <child link="camera_rgb_frame" />
    </joint>
    <link name="camera_rgb_frame"/>

    <joint name="camera_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_rgb_frame" />
      <child link="camera_rgb_optical_frame" />
    </joint>
    <link name="camera_rgb_optical_frame"/>

    <joint name="camera_joint" type="fixed">
      <origin xyz="0.0 0.0 -0.016" rpy="0 0 0"/>
<!--      <origin xyz="-0.0 ${-kinect_cam_py} -0.016" rpy="0 0 0"/>-->
      <parent link="camera_rgb_frame"/>
      <child link="camera_link"/>
    </joint>
    
<!--    <joint name="camera_joint" type="revolute">-->
<!--      <axis xyz="0 0 1"/>-->
<!--      <limit effort="1000.0" lower="-1.57" upper="1.57" velocity="10"/>-->
<!--      <origin xyz="-0.031 0 0.41" rpy="0 0 0"/>-->
<!--      <parent link="base_link"/>-->
<!--      <child link="camera_link"/>-->
<!--    </joint>-->
    
    
   <link name="camera_link">
      <visual>
       <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}"/>
        <geometry>
<!--         <mesh filename="package://turtlebot_description/meshes/sensors/kinect.dae"/>-->
  	      <box size="0.01 0.02 0.04"/>
        </geometry>
      </visual>
<!--  	  <collision>-->
<!--        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>-->
<!--  	    <geometry>-->
<!--  	      <box size="0.01 0.02 0.04"/>-->
<!--  	    </geometry>-->
<!--  	  </collision>-->
      <inertial>
        <mass value="0.564" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                 iyy="0.000498940" iyz="0.0"
                 izz="0.003879257" />
      </inertial>
    </link>

    <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch 
         files. However, for Gazebo simulation we need them, so we add them here.
         (Hence, don't publish them additionally!) -->
	<joint name="camera_depth_joint" type="fixed">
	  <origin xyz="0 ${2 * -kinect_cam_py} 0" rpy="0 0 0" />
	  <parent link="camera_rgb_frame" />
	  <child link="camera_depth_frame" />
	</joint>
	<link name="camera_depth_frame"/>

	<joint name="camera_depth_optical_joint" type="fixed">
	  <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
	  <parent link="camera_depth_frame" />
	  <child link="camera_depth_optical_frame" />
	</joint>
	<link name="camera_depth_optical_frame"/>
	
	<!-- Kinect sensor for simulation -->
	<turtlebot_sim_3dsensor/>
  </xacro:macro>
</robot>
